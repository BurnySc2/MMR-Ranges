name: Build_MMR_ranges

on: [push, pull_request]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: [3.7]
        node: [ '10' ]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache poetry
        uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-${{ matrix.python-version }}-poetry-${{ hashFiles('poetry.lock') }}

      - name: Install poetry (python)
        run: |
          python -m pip install poetry

      - name: Install dependencies (python)
        run: |
          poetry install

      - name: Cache npm
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-${{ matrix.node }}-node-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies (npm)
        run: |
          npm install

      - name: Create data tables (python)
        run: |
          poetry run python main.py ${{ secrets.CLIENT_ID }} ${{ secrets.CLIENT_SECRET }}

      - name: Create website (npm)
        run: |
          npm run build

      - name: Deploy to GitHub Pages
        if: github.ref == 'refs/heads/master'
        uses: crazy-max/ghaction-github-pages@v2
        with:
          target_branch: gh-pages
          build_dir: build
          committer: "MMRbot <mmr@foo.bar>"
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
